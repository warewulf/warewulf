#!/bin/sh

PATH=$PATH:/sbin:/usr/sbin:/bin:/usr/bin

if ! command -v info >/dev/null; then
    info() {
        printf '%s\n' "$*"
    }
fi

if ! command -v die >/dev/null; then
    die() {
        printf '%s\n' "$*" >&2
        exit 1
    }
fi

already_formatted() {
    dev="$1"

    # Step 1: check if blkid recognizes a filesystem
    fs_type=$(blkid -o value -s TYPE "$dev" 2>/dev/null)

    if [ -z "$fs_type" ]; then
        # No recognized filesystem
        return 1
    fi

    # Step 2: try mounting read-only to a temp dir
    tmpdir=$(mktemp -d)
    if mount -o ro,norecovery -t "$fs_type" "$dev" "$tmpdir" >/dev/null 2>&1; then
        umount "$tmpdir"
        rmdir "$tmpdir"
        return 0  # usable filesystem
    else
        rmdir "$tmpdir"
        return 1  # filesystem exists but not mountable â†’ treat as unformatted
    fi
}

if command -v mkfs >/dev/null ; then :
{{- $filesystems := list }}
{{- if .FileSystems }}
{{- 	range $fs := .ThisNode.FileSystemList }}
{{- 		if ne $fs.Format "swap" }}
{{- 			$fsDict := dict "device" $fs.Id "overwrite" $fs.WipeFileSystem }}
{{- 			if $fs.Format }}
{{- 				$_ := set $fsDict "type" $fs.Format }}
{{- 			end }}
{{- 			if $fs.Options }}
{{- 				$_ := set $fsDict "options" ($fs.Options | join " ") }}
{{- 			end }}
{{- 			if $fs.Label }}
{{- 				$_ := set $fsDict "label" $fs.Label }}
{{- 			end }}
{{- 			if $fs.Uuid }}
{{- 				$_ := set $fsDict "uuid" $fs.Uuid }}
{{- 			end }}
{{- 			$filesystems = append $filesystems $fsDict }}
{{- 		end }}
{{- 	end }}
{{- else }}
{{- 	$filesystems = index .Resources "mkfs" }}
{{- end }}
{{- range $i, $fs := $filesystems }}
{{- 	if and $fs.type $fs.device }}
    if {{if $fs.overwrite}}true{{else}}false{{end}} || ! already_formatted {{ $fs.device }}; then
        info "warewulf: mkfs: formatting {{ $fs.device }}"
        mkfs {{ not (empty $fs.type) | ternary (print "--type=" $fs.type) "" }} {{ not (empty $fs.label) | ternary (print "-L " $fs.label) "" }} {{ not (empty $fs.uuid) | ternary (print "-U " $fs.uuid) "" }} {{ default "" $fs.options }} -f {{ $fs.device }} {{ default "" $fs.size }} || die "warewulf: mkfs: failed to format {{ $fs.device }}"
    else
        info "warewulf: mkfs: skipping {{ $fs.device }}"
    fi
{{- 	end }}
{{- end }}
else
    info "warewulf: mkfs not found"
fi
